set prompt,redirect
################################################################################
#
# kdraw.mac
#
################################################################################
#
# This macro reads the parameter values for a user supplied generation and 
# member. It calculates the function and displays the experimental data, the
# calculated function and the difference.
#
# @kdraw generation,member
#        generation may be any generation number or -1 for the current one
#
################################################################################
#
variable integer,generation
variable integer,member
variable integer,children
variable integer,parameters
fclose all
#
rese
#
# Get generation numbers, number of members, children and parameters
#
fopen 1,GENERATION
#
fget  1,generation,member,children,parameters
fclose 1
#
if($1.eq.-1) then
  i[0] = generation -1
else
  i[0] = $1
endif
#
# load the requested generation, and read all parameters for the 
# requested member
#
do i[2]=1,parameters
  rese
  eval i[2]
  load st, "DIFFEV/Parameter.%4D",i[2], i[0],1,3
  r[10 + i[2]] = y[1,$2]
enddo
#rese
#i[2] = 1
#load st, DIFFEV/Parameter.0001, i[0],1,3
#r[10 + i[2]] = y[1,$2]
#rese
#i[2] = 2
#load st, DIFFEV/Parameter.0002, i[0],1,3
#r[10 + i[2]] = y[1,$2]
#rese
#i[2] = 3
#load st, DIFFEV/Parameter.0003, i[0],1,3
#r[10 + i[2]] = y[1,$2]
#eval r[11]
#eval r[12]
#eval r[13]

#
# Now load data and calculate functiion
#
rese
load xy,DATA/data.noisy
func  r[11]*(atan((abs(r[0 ]-r[12] ))/r[13])),xmin[1],xmax[1],0.1
rval 1,2,one
#
# Create pretty plot
#
achx x
achy Value
tit1 "Fit in Generation %4d",generation
tit2 "Member %4d R-Value %8.4f",$2,res[2]
kcal sub,1,2
skal
mark
ltyp 1,1
ltyp 2,1
ltyp 3,3
mtyp 1,3
mtyp 2,0
mtyp 3,3
lcol 1,3
lcol 2,1
lcol 3,2
mcol 1,3
mcol 2,1
mcol 3,2
plot
#
set prompt,on
